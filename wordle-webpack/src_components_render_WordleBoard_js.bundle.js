"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkwordle"] = self["webpackChunkwordle"] || []).push([["src_components_render_WordleBoard_js"],{

/***/ "./src/components/render/WordleBoard.js":
/*!**********************************************!*\
  !*** ./src/components/render/WordleBoard.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"WordleBoard\": () => (/* binding */ WordleBoard)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"./node_modules/@babel/runtime/helpers/esm/createClass.js\");\n/* harmony import */ var _state_GameState__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../state/GameState */ \"./src/components/state/GameState.js\");\n\n\n\nvar WordleBoard = /*#__PURE__*/function () {\n  function WordleBoard(popupMsgNode, validWords, word, width, tries) {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, WordleBoard);\n\n    this.alphabet = this.getAlphabet();\n    this.wordAsDict = this.getDict(word);\n    this.word = word;\n    this.validWords = validWords;\n    this.rows = tries;\n    this.cols = width;\n    this.grid = this.createGrid(tries, width);\n    this.curRow = 0;\n    this.curCol = 0;\n    this.popupMsg = popupMsgNode;\n    this.gameState = new _state_GameState__WEBPACK_IMPORTED_MODULE_2__.GameState(tries);\n    this.createEventListeners();\n  }\n\n  (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(WordleBoard, [{\n    key: \"getAlphabet\",\n    value: function getAlphabet() {\n      var lowerAlphabet = 'abcdefghijklmnopqrstuvwxyz';\n      var upperAlphabet = lowerAlphabet.toUpperCase();\n      return [lowerAlphabet, upperAlphabet].join('');\n    }\n  }, {\n    key: \"getDict\",\n    value: function getDict(word) {\n      // Params: word. Return: word as a counted dictionary.\n      var dict = {};\n\n      for (var idx in word) {\n        var letter = word[idx];\n\n        if (dict[letter]) {\n          dict[letter] += 1;\n        } else {\n          dict[letter] = 1;\n        }\n      }\n\n      return dict;\n    }\n  }, {\n    key: \"getCurRowInput\",\n    value: function getCurRowInput() {\n      return this.grid[this.curRow].join('');\n    }\n  }, {\n    key: \"createGrid\",\n    value: function createGrid(rows, cols) {\n      // Params: rows, cols. Return: grid of rows x cols.\n      var grid = [];\n\n      for (var _row = 0; _row < rows; _row += 1) {\n        var curRow = [];\n\n        for (var _col = 0; _col < cols; _col += 1) {\n          curRow.push(' ');\n        }\n\n        grid.push(curRow);\n      }\n\n      return grid;\n    }\n  }, {\n    key: \"createEventListeners\",\n    value: function createEventListeners() {\n      var _this = this;\n\n      window.addEventListener('keydown', function (event) {\n        var key = event.key;\n        var shakeRow, flipRow;\n\n        if (key === 'Enter') {\n          var curWord = _this.getCurRowInput();\n\n          var fullRow = _this.curCol === _this.cols;\n\n          if (fullRow && !_this.validWords.includes(curWord)) {\n            _this.injectPopupMsg('invalid-word');\n\n            shakeRow = _this.curRow;\n          } else if (fullRow) {\n            _this.gameState.update(_this.curRow);\n\n            flipRow = _this.curRow;\n            _this.curRow += 1;\n            _this.curCol = 0;\n          } else {\n            _this.injectPopupMsg('non-full-row');\n\n            shakeRow = _this.curRow;\n          }\n        } else if (key === 'Backspace') {\n          _this.curCol -= 1;\n          if (_this.curCol < 0) _this.curCol = 0;\n          _this.grid[_this.curRow][_this.curCol] = ' ';\n        } else {\n          if (_this.alphabet.indexOf(key) !== -1) {\n            _this.populateRow(key, _this.curRow, _this.curCol);\n          }\n        }\n\n        _this.render(shakeRow, flipRow);\n      });\n    }\n  }, {\n    key: \"injectPopupMsg\",\n    value: function injectPopupMsg(msg) {\n      var _this2 = this;\n\n      switch (msg) {\n        case 'non-full-row':\n          this.popupMsg.textContent = 'word not long enough';\n          break;\n\n        case 'invalid-word':\n          this.popupMsg.textContent = 'word does not exist';\n          break;\n\n        default:\n          break;\n      }\n\n      setTimeout(function () {\n        return _this2.fadePopupMsg();\n      }, 1000);\n    }\n  }, {\n    key: \"fadePopupMsg\",\n    value: function fadePopupMsg() {\n      this.popupMsg.textContent = '';\n      document.getElementsByClassName('wordle-grid_row')[this.curRow].classList.remove('shake');\n    }\n  }, {\n    key: \"populateRow\",\n    value: function populateRow(key, row, col) {\n      if (row < this.rows && col < this.cols) {\n        this.grid[row][col] = key.toLowerCase();\n        this.incrCol();\n      }\n    }\n  }, {\n    key: \"decrCol\",\n    value: function decrCol() {\n      if (this.col - 1 > 0) {\n        this.curCol -= 1;\n        this.grid[row][col] = ' ';\n      }\n    }\n  }, {\n    key: \"incrCol\",\n    value: function incrCol() {\n      this.curCol += 1;\n\n      if (this.curCol > this.cols) {\n        this.curCol -= 1;\n      }\n    }\n  }, {\n    key: \"renderCell\",\n    value: function renderCell(row, col, letter, wordAsDict, shouldSpinCell) {\n      var cellClass = ['wordle-grid_row_element'];\n      if (shouldSpinCell) cellClass.push('flip');\n\n      if (row < this.curRow) {\n        if (wordAsDict[letter]) {\n          if (letter === this.word[col]) {\n            cellClass.push('evaluated-row-match');\n          } else {\n            cellClass.push('evaluated-row-soft-match');\n          }\n\n          wordAsDict[letter] -= 1;\n\n          if (wordAsDict[letter] === 0) {\n            delete wordAsDict[letter];\n          }\n        }\n      } else if (row > this.curRow) {\n        cellClass.push('unevaluated-row');\n      }\n\n      return \"<div class='\".concat(cellClass.join(' '), \"'>\").concat(letter.toUpperCase(), \"</div>\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var shakeRow = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n      var flipRow = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n      var html = [\"<div class='wordle-grid'>\"];\n\n      for (var _row2 = 0; _row2 < this.rows; _row2 += 1) {\n        var rowWrapper = shakeRow === _row2 ? \"<span class='wordle-grid_row shake'>\" : \"<span class='wordle-grid_row'>\";\n        var wordAsDict = JSON.parse(JSON.stringify(this.wordAsDict));\n        html.push(rowWrapper);\n        var shouldSpinCell = flipRow === _row2;\n\n        for (var _col2 = 0; _col2 < this.cols; _col2 += 1) {\n          var letter = this.grid[_row2][_col2];\n          var cell = this.renderCell(_row2, _col2, letter, wordAsDict, shouldSpinCell);\n          html.push(cell);\n        }\n\n        html.push('</span>');\n      }\n\n      html.push('</div>');\n      document.getElementById('board').innerHTML = html.join('');\n    }\n  }]);\n\n  return WordleBoard;\n}();\n\n//# sourceURL=webpack://wordle/./src/components/render/WordleBoard.js?");

/***/ }),

/***/ "./src/components/state/GameState.js":
/*!*******************************************!*\
  !*** ./src/components/state/GameState.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"GameState\": () => (/* binding */ GameState)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"./node_modules/@babel/runtime/helpers/esm/createClass.js\");\n\n\nvar GameState = /*#__PURE__*/function () {\n  function GameState(cols) {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, GameState);\n\n    this.curTry = 0;\n    this.maxTries = cols;\n  }\n\n  (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(GameState, [{\n    key: \"update\",\n    value: function update() {}\n  }]);\n\n  return GameState;\n}();\n\n//# sourceURL=webpack://wordle/./src/components/state/GameState.js?");

/***/ })

}]);